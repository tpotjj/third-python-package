name: Packaging

on:
  - push

jobs:

  format:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - name: Run Black
        run: tox -e format

  sort:
    name: Sort Imports
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - name: Run isort
        run: tox -e sort

  type:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - name: Run MyPy
        run: tox -e typecheck

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install tox
        run: python -m pip install tox
      - name: Run flake8
        run: tox -e lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "py310"
          - version: "3.11"
            toxenv: "py311"
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install tox
        run: python -m pip install tox
      - name: Run Unit Tests
        run: tox -e ${{ matrix.python.toxenv }}

  dist:
    name: Builde source Distribution
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install build
        run: python -m pip install build
      - name: Run build
        run: python -m build --sdist
      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz

  wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022, macos-12, macos-13]
        python-version: ["cp310-*", "cp311-*"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.15.0
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheels
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheels/*.whl

  publish:
    name: Publish package
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - format
      - sort
      - type
      - lint
      - test
      - dist
      - wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ./dist
      - name: Upload Artifacts
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}